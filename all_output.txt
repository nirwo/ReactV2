Alright, let's start by laying out the core files and their purposes:

1. `server.js`: This file will act as the entry point for our Node.js server. It will handle the file upload and the search endpoint.

2. `router/api.js`: This file will contain the API endpoints for the server.

3. `controllers/fileController.js`: This file will contain the logic for handling the file upload and parsing the xlsx file.

4. `controllers/searchController.js`: This file will contain the logic for searching the parsed xlsx file.

5. `client/src/App.js`: This is the main file for the React application. It will handle the file upload form and the search functionality.

6. `client/src/components/SearchBar.js`: This file will contain the search bar component.

7. `client/src/components/PivotTable.js`: This file will contain the pivot table component.

8. `client/package.json`: This file will contain the dependencies for the React application.

9. `package.json`: This file will contain the dependencies for the Node.js server.

10. `client/src/styles.css`: This file will contain the CSS for the React application.

Now, let's start creating the files:

server.js
```
const express = require('express');
const fileUpload = require('express-fileupload');
const apiRouter = require('./router/api');

const app = express();

app.use(fileUpload());
app.use('/api', apiRouter);

app.listen(5000, () => {
  console.log('Server is running on port 5000');
});
```

router/api.js
```
const express = require('express');
const fileController = require('../controllers/fileController');
const searchController = require('../controllers/searchController');

const router = express.Router();

router.post('/upload', fileController.uploadFile);
router.get('/search', searchController.searchFile);

module.exports = router;
```

controllers/fileController.js
```
const xlsx = require('xlsx');

let workbook;

exports.uploadFile = (req, res) => {
  if (!req.files) {
    return res.status(400).send('No files were uploaded.');
  }

  let uploadFile = req.files.uploadFile;

  workbook = xlsx.read(uploadFile.data, {type: 'buffer'});

  res.send('File uploaded!');
};
```

controllers/searchController.js
```
const xlsx = require('xlsx');

exports.searchFile = (req, res) => {
  if (!workbook) {
    return res.status(400).send('No file has been uploaded.');
  }

  let searchString = req.query.q;
  let results = [];

  workbook.SheetNames.forEach(sheet => {
    let data = xlsx.utils.sheet_to_json(workbook.Sheets[sheet]);
    data.forEach(row => {
      for (let key in row) {
        if (row[key].toString().includes(searchString)) {
          results.push(row);
        }
      }
    });
  });

  res.send(results);
};
```

client/src/App.js
```
import React, { useState } from 'react';
import SearchBar from './components/SearchBar';
import PivotTable from './components/PivotTable';

function App() {
  const [data, setData] = useState([]);

  const handleSearch = (searchString) => {
    fetch(`/api/search?q=${searchString}`)
      .then(response => response.json())
      .then(data => setData(data));
  };

  return (
    <div className="App">
      <SearchBar onSearch={handleSearch} />
      <PivotTable data={data} />
    </div>
  );
}

export default App;
```

client/src/components/SearchBar.js
```
import React, { useState } from 'react';

function SearchBar({ onSearch }) {
  const [searchString, setSearchString] = useState('');

  const handleSearch = (event) => {
    event.preventDefault();
    onSearch(searchString);
  };

  return (
    <form onSubmit={handleSearch}>
      <input type="text" value={searchString} onChange={e => setSearchString(e.target.value)} />
      <button type="submit">Search</button>
    </form>
  );
}

export default SearchBar;
```

client/src/components/PivotTable.js
```
import React from 'react';
import PivotTableUI from 'react-pivottable/PivotTableUI';
import 'react-pivottable/pivottable.css';

function PivotTable({ data }) {
  return (
    <PivotTableUI
      data={data}
      onChange={s => setPivotState(s)}
      {...pivotState}
    />
  );
}

export default PivotTable;
```

client/package.json
```
{
  "name": "client",
  "version": "1.0.0",
  "main": "index.js",
  "dependencies": {
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-scripts": "4.0.3",
    "react-pivottable": "^0.11.0"
  }
}
```

package.json
```
{
  "name": "server",
  "version": "1.0.0",
  "main": "server.js",
  "dependencies": {
    "express": "^4.17.1",
    "express-fileupload": "^1.2.1",
    "xlsx": "^0.16.9"
  }
}
```

client/src/styles.css
```
.App {
  text-align: center;
}

form {
  margin-bottom: 20px;
}
```

This concludes a fully working implementation.